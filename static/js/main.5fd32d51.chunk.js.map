{"version":3,"sources":["views/Title/index.js","views/Title/Title.js","views/SubTitle/SubTitle.js","views/SubTitle/index.js","views/Columns/index.js","views/Columns/Columns.js","views/Editor/Editor.js","constants/editor.js","actions/utils/delay.js","actions/editor.js","views/Editor/index.js","views/Render/Render.js","views/Render/index.js","views/CopyField/CopyField.js","views/CopyField/index.js","views/CopyZone/index.js","views/CopyZone/CopyZone.js","views/DiagramType/DiagramType.js","views/DiagramType/index.js","views/RenderUrl/RenderUrl.js","views/RenderUrl/index.js","views/App/index.js","views/App/App.js","views/Router/index.js","views/Router/Router.js","reportWebVitals.js","init/redux.js","init/reactRedux.js","kroki/coder.js","kroki/krokiInfo.js","reducers/editor.js","reducers/utils/createReducer.js","reducers/debug.js","reducers/index.js","providers/exportToWindow.js","providers/diagramChange.js","providers/debug.js","init/react.js","index.js"],"names":["Title","className","gitInfo","version","process","commit","hash","substr","SubTitle","href","Columns","children","Editor","text","onTextChanged","changeHandler","event","target","value","onChange","TEXT_COPIED","COPY_BUTTON_HOVERED","RENDERURL_CHANGED","DIAGRAM_CHANGED","DIAGRAM_CHANGED_UPDATE","DIAGRAM_TYPE_CHANGED","delay","timeout","data","Promise","resolve","reject","setTimeout","lastChange","connect","state","editor","diagramText","dispatch","getState","a","type","currentChange","Date","getTime","Render","diagramUrl","diagramEditUrl","alt","src","CopyField","onCopy","onCopyHover","isCopyHover","isCopied","scope","isMultiline","isHover","classnames","readOnly","onMouseEnter","onMouseLeave","onClick","ownProps","scopes","copyButtonHovered","copy","copyText","CopyZone","DiagramType","diagramTypes","diagramType","onDiagramTypeChanged","id","aria-label","Object","keys","map","name","diagramTypeChanged","RenderUrl","renderUrl","renderUrlChanged","App","Router","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initRedux","baseUrl","initialState","reducerCreator","history","createBrowserHistory","basename","reducer","middleware","thunk","routerMiddleware","enhancers","store","createStore","compose","applyMiddleware","stateRegistrations","registerStateChange","getStateValue","onNewValue","stateRegistration","currentValue","undefined","push","encode","source","TextEncoder","compressed","pako","deflate","level","x","String","fromCharCode","join","btoa","replace","decode","coded","atob","inflate","split","charCodeAt","to","window","coder","krokiInfo","blockdiag","example","bpmn","bytefield","seqdiag","actdiag","nwdiag","packetdiag","rackdiag","c4plantuml","ditaa","erd","excalidraw","graphviz","mermaid","nomnoml","pikchr","plantuml","svgbob","vega","vegalite","wavedrom","defaultDiagramType","location","origin","pathname","filetype","config","krokiEngineUrl","updateDiagram","codedDiagramTextText","createReducer","reducersByType","action","specificReducer","payload","isFirstRendering","url","startsWith","protocol","renderSite","protocolSeparator","protocolSeparatorPosition","indexOf","length","urlParts","slice","updateHash","updateDiagramTypeAndTextIfDefault","debug","localStorage","debugReducer","console","log","combineReducers","router","connectRouter","provider","onNewState","stateChangeManager","previousValue","currentState","subscribeParams","providers","domNode","ReactNode","onInitialState","onStartApplication","stateChanges","stateChange","unsubscribe","subscribe","ReactDOM","render","StrictMode","initReact","onInit","initReactRedux","exportToWindow","diagramChange","document","getElementById","reducers"],"mappings":"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","file":"static/js/main.5fd32d51.chunk.js","sourcesContent":["import Title from './Title';\n\nexport default Title;\n\n","import React from 'react';\n\nimport './Title.css'\n\nconst Title = () => {\n    return <h2 className='Title'>Niolesk</h2>\n}\n\nexport default Title;","import GitInfo from 'react-git-info/macro';\nimport React from 'react';\n\nimport './SubTitle.css'\n\nconst gitInfo = GitInfo();\nconst version = `${process.env.REACT_APP_VERSION}-${gitInfo.commit.hash.substr(0,8)}`;\n\n\nconst SubTitle = () => {\n    return <div className='SubTitle'>\n        <div>Edit <b>diagrams</b> from <b>textual</b> descriptions! : A <a href='https://kroki.io'>kroki</a> interface.</div>\n        <div className='SubTitleSmall'>Github project page: <a href='https://github.com/webgiss/niolesk/'>https://github.com/webgiss/niolesk/</a> - Version { version }</div>\n    </div>\n}\n\nexport default SubTitle;\n","import SubTitle from './SubTitle';\n\nexport default SubTitle;\n\n","import Columns from './Columns';\n\nexport default Columns;\n\n","import React from 'react';\n\nimport './Columns.css'\n\nconst Columns = ({ children }) => {\n    return <div className='Columns'>\n        {children}\n    </div>\n}\n\nexport default Columns;","import React from 'react';\n\nimport './Editor.css'\n\nconst Editor = ({ text, onTextChanged }) => {\n    let changeHandler = null;\n    if (onTextChanged) { \n        changeHandler = (event)=>onTextChanged(event.target.value); \n    }\n\n    return <div className='Editor'>\n        <textarea \n            className='EditorTextArea' \n            value={text} \n            onChange={changeHandler}\n        />\n    </div>\n}\n\nexport default Editor;","export const COPY_TEXT = 'COPY_TEXT';\nexport const TEXT_COPIED = 'TEXT_COPIED';\nexport const COPY_BUTTON_HOVERED = 'COPY_BUTTON_HOVERED';\nexport const EDITOR_CHANGED = 'EDITOR_CHANGED';\nexport const RENDERURL_CHANGED = 'RENDERURL_CHANGED';\nexport const DIAGRAM_CHANGED = 'DIAGRAM_CHANGED';\nexport const DIAGRAM_CHANGED_UPDATE = 'DIAGRAM_CHANGED_UPDATE';\nexport const DIAGRAM_TYPE_CHANGED = 'DIAGRAM_TYPE_CHANGED';\n","/**\n * Promise that delay execution\n * \n * @param {Number} timeout The timeout to delay\n * @param {T} data A data to pass to the promise\n * @return {Promise<T>}\n * @template T\n */\nconst delay = (timeout, data) => new Promise((resolve, reject) => {\n    setTimeout(() => resolve(data), timeout)\n})\nexport default delay;","import { COPY_TEXT, TEXT_COPIED, COPY_BUTTON_HOVERED, RENDERURL_CHANGED, DIAGRAM_CHANGED, DIAGRAM_TYPE_CHANGED, DIAGRAM_CHANGED_UPDATE } from \"../constants/editor\";\nimport delay from \"./utils/delay\";\nimport copy from 'copy-to-clipboard';\n\n\n/**\n * Copy the text associated to the scope\n * \n * @param {string} scope \n * @param {string} text\n */\nexport const copyText = (scope, text) => async (dispatch, getState) => {\n    dispatch({ type: COPY_TEXT, scope, text });\n    copy(text);\n    dispatch({ type: TEXT_COPIED, scope, isCopied: true });\n    await delay(1000);\n    dispatch({ type: TEXT_COPIED, scope, isCopied: false });\n};\n\n/**\n * Indicate that the Copy button from the scope is hovered or not.\n * \n * @param {string} scope \n * @param {boolean} isHover \n */\nexport const copyButtonHovered = (scope, isHover) => ({ type: COPY_BUTTON_HOVERED, scope, isHover });\n\n/**\n * Called when the renderUrl has changed.\n * \n * @param {string} renderUrl\n * @returns \n */\nexport const renderUrlChanged = (renderUrl) => ({ type: RENDERURL_CHANGED, renderUrl })\n\nlet lastChange = null;\n\n/**\n * Called when the diagramText has changed.\n * \n * @param {string} diagramText \n * @returns \n */\nexport const diagramChanged = (diagramText) => async (dispatch, getState) => {\n    dispatch({ type: DIAGRAM_CHANGED, diagramText });\n    const currentChange = (new Date()).getTime();\n    lastChange = currentChange;\n    await delay(750);\n    if (lastChange === currentChange) {\n        dispatch({ type: DIAGRAM_CHANGED_UPDATE });\n    }\n}\n\n/**\n * Called when diagramType changed\n * \n * @param {string} diagramType \n * @returns \n */\nexport const diagramTypeChanged = (diagramType) => ({ type: DIAGRAM_TYPE_CHANGED, diagramType });\n","import { connect } from 'react-redux'\nimport Editor from './Editor'\nimport { diagramChanged } from '../../actions/editor';\n\nconst mapStateToProps = (state) => {\n    return {\n        text: state.editor.diagramText,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onTextChanged: (text) => dispatch(diagramChanged(text)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","import React from 'react';\n\nimport './Render.css'\n\nconst Render = ({ diagramUrl, diagramEditUrl }) => {\n    return <div className='Render'>\n        <img alt='Diagram' className='RenderImage' src={diagramUrl} />\n        <p><a href={diagramEditUrl}>Edit this diagram.</a></p>\n    </div>\n}\n\nexport default Render;","import { connect } from 'react-redux'\nimport Render from './Render'\n\nconst mapStateToProps = (state) => {\n    return {\n        diagramUrl: state.editor.diagramUrl,\n        diagramEditUrl: state.editor.diagramEditUrl,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Render);","import React from 'react';\nimport classnames from 'classnames'\n\nimport './CopyField.css'\n\nconst CopyField = ({ text, onCopy, onCopyHover, isCopyHover, isCopied, scope, isMultiline }) => {\n    if (!onCopy) {\n        onCopy = (scope, text) => {};\n    }\n    if (!onCopyHover) {\n        onCopyHover = (scope, isHover) => {};\n    }\n    \n    return <div className={classnames('CopyField',{'copy-hover':isCopyHover, 'copied':isCopied})}>\n        <textarea className={classnames('CopyFieldPre', {'multiline': isMultiline})} type='text' value={text} readOnly />\n        <button \n            className='CopyButton' \n            onMouseEnter={()=>onCopyHover(scope, true)}\n            onMouseLeave={()=>onCopyHover(scope, false)}\n            onClick={()=>onCopy(scope, text)}\n        >Copy</button>\n    </div>\n}\n\nexport default CopyField;","import { copyButtonHovered, copyText } from '../../actions/editor'\nimport { connect } from 'react-redux'\nimport CopyField from './CopyField'\n\nconst mapStateToProps = (state, ownProps) => {\n    const { scope } = ownProps;\n    const { diagramEditUrl, diagramUrl } = state.editor;\n    let text = 'poide';\n    switch (scope) {\n        case 'image': text = diagramUrl; break;\n        case 'edit': text = diagramEditUrl; break;\n        case 'markdown': text = `![Diagram](${diagramUrl})\\n\\n[Edit this diagram](${diagramEditUrl})\\n`; break;\n        default:\n            text = '';\n    }\n    return {\n        text,\n        scope: scope,\n        isCopyHover: state.editor.scopes[scope].isHover,\n        isCopied: state.editor.scopes[scope].isCopied,\n        isMultiline: scope === 'markdown',\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onCopyHover: (scope, isHover) => dispatch(copyButtonHovered(scope, isHover)),\n        onCopy: (scope, text) => dispatch(copyText(scope, text))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyField);","import CopyZone from './CopyZone';\n\nexport default CopyZone;\n\n","import React from 'react';\nimport CopyField from '../CopyField'\nimport './CopyZone.css'\n\nconst CopyZone = () => {\n    return <div className='CopyZone'>\n        <p className='CopyZoneTitle'>Image url</p>\n        <CopyField scope='image'/>\n        <p className='CopyZoneTitle'>Edit url</p>\n        <CopyField scope='edit'/>\n        <p className='CopyZoneTitle'>Markdown content</p>\n        <CopyField scope='markdown'/>\n    </div>\n}\n\nexport default CopyZone;","import React from 'react';\n\nimport './DiagramType.css'\n\nconst DiagramType = ({ diagramTypes, diagramType, onDiagramTypeChanged }) => {\n    if (!diagramTypes) {\n        diagramTypes = {}\n    }\n    let changeHandler = null;\n    if (onDiagramTypeChanged) {\n        changeHandler = (event) => onDiagramTypeChanged(event.target.value);\n    }\n\n    return <div className='DiagramType'>\n        <div className='DiagramTypeSelectOutter'>\n            <select id='select-diagram' className='DiagramTypeSelect' aria-label='Diagram' value={diagramType} onChange={changeHandler} >\n                {\n                    Object.keys(diagramTypes).map(\n                        (diagramType) => <option value={diagramType} key={diagramType}>{diagramTypes[diagramType].name}</option>\n                    )\n                }\n            </select>\n        </div>\n    </div>\n}\n\nexport default DiagramType;","// import actions from '../../actions'\nimport { connect } from 'react-redux'\nimport { diagramTypeChanged } from '../../actions/editor';\nimport DiagramType from './DiagramType'\n\nconst mapStateToProps = (state) => {\n    return {\n        diagramTypes : state.editor.diagramTypes,\n        diagramType: state.editor.diagramType,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDiagramTypeChanged: (diagramType) => dispatch(diagramTypeChanged(diagramType)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiagramType);","import React from 'react';\n\nimport './RenderUrl.css'\n\nconst RenderUrl = ({ renderUrl, renderUrlChanged }) => {\n    let changeHandler = null;\n    if (renderUrlChanged) {\n        changeHandler = (event) => renderUrlChanged(event.target.value);\n    }\n\n    return <div className='RenderUrl'>\n        <input className='RenderUrlInput' value={renderUrl} onChange={changeHandler} aria-label='Render URL engine'></input>\n    </div>\n}\n\nexport default RenderUrl;","import { connect } from 'react-redux'\nimport RenderUrl from './RenderUrl'\nimport { renderUrlChanged } from '../../actions/editor';\n\nconst mapStateToProps = (state) => {\n    return {\n        renderUrl: state.editor.renderUrl,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        renderUrlChanged: (renderUrl) => dispatch(renderUrlChanged(renderUrl)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RenderUrl);","import App from './App';\n\nexport default App;\n\n","import React from 'react';\nimport Title from '../Title';\nimport SubTitle from '../SubTitle';\nimport Columns from '../Columns';\nimport Editor from '../Editor';\nimport Render from '../Render';\nimport CopyZone from '../CopyZone';\nimport DiagramType from '../DiagramType';\nimport RenderUrl from '../RenderUrl';\n\nimport './App.css'\n\nconst App = () => {\n    return <div className='App'>\n        <Title />\n        <SubTitle />\n        <DiagramType />\n        <RenderUrl />\n        <Columns>\n            <Editor />\n            <Render />\n        </Columns>\n        <CopyZone />\n    </div>\n}\n\nexport default App;","import Router from './Router';\n\nexport default Router;","import React from 'react';\nimport { Route } from 'react-router';\nimport App from '../App';\nimport './index.css';\n\nconst mainRoutes = () => (\n    <>\n        <Route path='*' component={App} />\n    </>\n);\nexport default mainRoutes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history';\n\n/**\n * @typedef {import('history').BrowserHistory} BrowserHistory\n */\n/**\n * @typedef {import('redux').Reducer<State>} Reducer\n * @template State\n */\n/**\n * @typedef {import('redux').Store<State>} Store\n * @template State\n */\n/**\n * @typedef {import('redux').AnyAction} AnyAction\n */\n\n/**\n * init a redux application\n * \n * @param {string} baseUrl\n * @param {State} initialState\n * @param {(history: BrowserHistory) => Reducer<State>} reducerCreator\n * @return {{history: BrowserHistory, store: Store<State>}}\n * @template State\n */\nconst initRedux = (baseUrl, initialState, reducerCreator) => {\n    // Create browser history to use in the Redux store\n    const history = createBrowserHistory({ basename: baseUrl });\n    const reducer = reducerCreator(history);\n\n    const middleware = [\n        thunk,\n        routerMiddleware(history),\n    ]\n\n    const enhancers = []\n\n    const isDevelopment = process.env.NODE_ENV === 'development';\n\n    if (isDevelopment && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n        enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n    }\n\n    const store = createStore(\n        reducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ...enhancers\n        )\n    );\n\n    return { history, store };\n};\nexport default initRedux;","// import exportValues from '../utils/exportValues';\nimport { initReact } from './react'\nimport initRedux from './redux'\n\n/**\n * @typedef {import('./redux').Reducer<State>} Reducer\n * @template State\n */\n/**\n * @typedef {import('./redux').Store<State>} Store\n * @template State\n */\n/**\n * @typedef {import('./redux').AnyAction} AnyAction\n */\n/**\n * @typedef {import('./redux').BrowserHistory} BrowserHistory\n */\n/**\n * @typedef {import('redux').Dispatch} Dispatch\n */\n/**\n * @typedef {import('redux').Unsubscribe} StoreUnsubscribe\n */\n\n/**\n * @typedef {Object} SubscribeParams\n * @property {Dispatch} dispatch\n * @property {Store<State>} store\n * @property {BrowserHistory} history\n * @template State\n*/\n\n/**\n * @typedef StateRegistration\n * @type {Object}\n * @property {string} name\n * @property {(state: State) => T} getStateValue\n * @property {(currentValue: T, previousValue: T, currentState: State, subscribeParams: SubscribeParams<State>) => void} onNewValue\n * @property {T} currentValue\n * @template State\n * @template T\n */\n\n/**\n * @typedef StateChange\n * @type {Object}\n * @property {string} name\n * @property {(state: State) => T} getStateValue\n * @property {(currentValue: T, previousValue: T, currentState: State, subscribeParams: SubscribeParams<State>) => void} onNewValue\n * @template State\n * @template T\n */\n\n/**\n * @typedef {StateRegistration<State,T>[]} StateRegistrations\n * @template State\n * @template T\n */\n\n/**\n * @typedef {Object} Provider\n * @property {(state:State)=>State} onInitialState\n * @property {(subscribeParams:SubscribeParams<State>)=>void} onStartApplication\n * @property {()=>void} onInit\n * @property {(state:State)=>void} onNewState\n * @property {StateChange<State,any>[]} stateChangeManager\n * @template State\n */\n\n/**\n * @typedef {Provider<State>[]} Providers\n * @template State\n */\n\n/** \n * @type {StateRegistrations<State, any>} \n * @template State\n */\nconst stateRegistrations = [];\n\n/**\n * Register a new State change\n * \n * @param {string} name \n * @param {(state: State) => T} getStateValue \n * @param {(currentValue: T, previousValue: T, currentState: State, subscribeParams: SubscribeParams<State>) => void} onNewValue \n * @template State\n * @template T\n */\nexport const registerStateChange = (name, getStateValue, onNewValue) => {\n    let stateRegistration = {\n        name,\n        getStateValue,\n        onNewValue,\n        currentValue: undefined,\n    };\n    stateRegistrations.push(stateRegistration);\n}\n\n/**\n * Initialize the whole react/redux stack\n * \n * @param {Providers<State>} providers\n * @param {string} baseUrl\n * @param {HTMLElement} domNode\n * @param {()=>JSX.Element} ReactNode\n * @param {(history: BrowserHistory) => Reducer<State>} reducerCreator\n * @return {()=>void}\n * @template State\n */\nexport const initReactRedux = (providers, baseUrl, domNode, ReactNode, reducerCreator) => {\n    /** @type {State} */\n    let initialState = undefined;\n\n    for (let provider of providers) {\n        if (provider.onInitialState !== undefined) {\n            initialState = provider.onInitialState(initialState);\n        }\n    }\n\n    const { history, store } = initRedux(baseUrl, initialState, reducerCreator);\n\n    let dispatch = store.dispatch;\n\n    /** @type {SubscribeParams<State>} */\n    let subscribeParams = { dispatch, store, history };\n\n    for (let provider of providers) {\n        if (provider.onStartApplication !== undefined) {\n            provider.onStartApplication(subscribeParams);\n        }\n    }\n\n    for (let provider of providers) {\n        if (provider.stateChangeManager !== undefined) {\n            const stateChanges = provider.stateChangeManager;\n            for (let stateChange of stateChanges) {\n                registerStateChange(stateChange.name, stateChange.getStateValue, stateChange.onNewValue);\n            }\n        }\n    }\n\n    let currentState = undefined;\n\n    const unsubscribe = store.subscribe(() => {\n        currentState = store.getState();\n\n        for (let provider of providers) {\n            if (provider.onNewState !== undefined) {\n                provider.onNewState(currentState);\n            }\n        }\n        for (let stateRegistration of stateRegistrations) {\n            let previousValue = stateRegistration.currentValue;\n            stateRegistration.currentValue = stateRegistration.getStateValue(currentState);\n            if (stateRegistration.currentValue !== previousValue) {\n                stateRegistration.onNewValue(stateRegistration.currentValue, previousValue, currentState, subscribeParams);\n            }\n        }\n    });\n\n    initReact(store, history, domNode, ReactNode);\n\n    for (let provider of providers) {\n        if (provider.onInit !== undefined) {\n            provider.onInit();\n        }\n    }\n\n    return () => {\n        unsubscribe();\n    };\n}\n\n\n\n","import pako from 'pako';\n\nexport const encode = (source) => {\n    const data = new TextEncoder('utf-8').encode(source);\n    const compressed = [...pako.deflate(data, { level: 9 })].map((x) => String.fromCharCode(x)).join('');\n    return btoa(compressed).replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nexport const decode = (coded) => {\n    const compressed = atob(coded.replace(/-/g, '+').replace(/_/g, '/'));\n    return pako.inflate(compressed.split('').map(x => x.charCodeAt(0)), { to: 'string' });\n}\n\nwindow.coder = { encode, decode };\nwindow.pako = pako;","const krokiInfo = {\n    blockdiag: { name: 'BlockDiag', example: 'eNpdzDEKQjEQhOHeU4zpPYFoYesRxGJ9bwghMSsbUYJ4d10UCZbDfPynolOek0Q8FsDeNCestoisNLmy-Qg7R3Blcm5hPcr0ITdaB6X15fv-_YdJixo2CNHI2lmK3sPRA__RwV5SzV80ZAegJjXSyfMFptc71w==' },\n    bpmn: { name: 'BPMN', example: 'eNrNXF9znLYWf8-nYPY9XiEJAZ7YmSZ2b-_cJPU0aadvHgzyLpNd2AtsbOepH6RzP1w_yZXEf5BAUJtuX9KKo6PzO_-PtM2bt4_7nfGNJmkYRxcr8wysDBr5cRBGm4vVr19-fO2s3l6-epPSvRdloX8e0PswCjNGnRpsa5SeP6bhxWqbZYfz9frh4eHsAZ3FyWYNATDXv3_88Nnfsr2vwyjNvMinq2JX0N4U7zdiV3qg_vrqiu02AbAgXl_9u9xxd9hHQ7ve3Xz8JNsX-JonvS93lGB1z_r489X1h5URBherWxPalouBiyBwnJWRecmGZp-8PU0Pnk9bHLMkTOOM-tszP96vG4pdd7nQx0OcZDS5WL339sco8IyPcUB3NKk__Vab0CTMipevDKO2Gjs-9Ta0KyIymbnXWqQYoR7pIYl9Rp2TktcmU0F6_Uj9Y-bd7RjWe2-XUiFJc9fOi-hnmoldu5Ttw8gpiLpkJWdiMTkjpsSLlc9Qf63Imxvud_HDJ6aWX-j95c9JQJNfqE_DbzS4_kaj7M1aSjjCR5wN5--18by9773d_v0xzeI9Tb546ddhLo2vXGvDusSYlLo8hN-_ewaLz_uVBhhM0LOK4ZRiME9mZkqejLv4SUcQy8SzLWIRa741TTJDAZ1F5vndgGCJMcmEkwrl9H23VJT4YiTFJ0nMxMdsE7PMLaRFoHF09aW3p4h3cdBVlYOMYpmhU2SMFrIaQhfcwUu83Y7u_uVl9MF7qiMalqgkOEJWgfZSHNWXYeyuqYW9vQcp9zQ-dPB04YYRy8V7GoTs83sv87e1XfN8UKL-64__PWxpwuIhNfZPhgjFt3_98eeYNlrI1Npo7rExmaxBGzsv4D11EWnpVK60rmozlgeFIrvJsVQpXzf84sNqTCfODJ0QHQ_hciplz_NoKfE77ys1si3NzT9qejQ9EBB8DpFZxi1FvsqTtb7ULQl0pcbPIjWxSqmLdGocvKc9T6hjMuMZMs92DhoF7SxhEu3cqBfZPLzCiEVXN077sVgK0ytS9L9HNhjQH1nZqwRFVVu2MtL4mPh5xMsqWN4I5wmhSP9rvTOg9IwykNp8haNq8sUqvoJJhy93JU2-RMmXM-nogZtaj69rqvgKZXb42tp6cNEEvkLlWnxtLNdDP3nPldyuO8ie5Hbbgv1D80lm3R1ltEYh03XGRiGoNwp1Oj_hECWmn47RhvXE93GizLPN_GNCSyf_qBu1KnN-ZoOln_1www9tltd83fC00n5bHL0UatrOc6R9Zqh2w6wpsT29I8AQzE763AbvvJQGnc7YdIBm9m-frtcL4hndNIZwcjeNoVYJ72lhWj8NAWzPsgOzUVtzcIYWXqIjrnPJjI54RDmmWyqHAIMBPGY0HVUMnqEYoqWYLGTZt6MW2dTN6a4YolIt7VBSMpk_T3Bd1VX7B7bKk65ug9uGr6kyBJ4j0yFQ9TA3LIHoSzwj0z1PS46sqiW_9jJ9iWc05Pj5GnIMSLMqs5KSelmY3ofjiWagQZ_ZdLPKqmx7zFbX0y_kWn0VK4TSA_rs2p2bqLtaJ7DCpYIgmHT4OkCbr3JWEEzafEXx0OSLp_DleVeTr3JWEEw6fBHR5qvsjAXoNl-RRfT4IqXdhHCz7aaexYRwHXktS5uvUr-CSWe2AURzLvDj3c67ixNPVHZxJVVXdMuyV5JLUPZHePDqnGJVY5cIKKMcT1ZGcWSlWQlYCT_-iNJiyPJJEPfZmRJ2RW_SHmOddmcV81Z6LFplg7_WaRhOcCz5iChlW9lfNIaHTGMkl4eDlHulon0c0ScN15VfI0h5g5b6Na4o5OlMwtu2wKzJvM4_jfhohYL4lj_TnvMX0qvQ2yTeXhz8pXrs_C1Mw_j1bWWaXxmjbEcDoyBfGUHsH_k1nWDKpUxoGu-O-X-55AzwfyCxAXQcUL4dNg--ES9NfOF6RzknRYS2d33eegcqE_a2iNcWw2ItTH-Kk_B7zKTdXayy5EibT1iBf_4uPkZBajxerExmoKf8j4cwyLbsXwFmdtzScLNlHKFbe15Xtg_eHd01O-Ku3JMBiYTRRSQWp0NCdo3JBVYNCSF7OUi35UtxF5VYnIAK91E5dgOVaeJlUYk3256t-OJ0VNghJ4NK5oHYmYOKAKBABdwFUckKYAuhhECFzHZze_F4KpDx_qsKLbB0ZEFZZEF1buA1jIeR61YAuLVKABguDIC3DT0AbFEFAJpOYQFcW6ABAC0JoF-d2-Wt-1kJioc_t0ozDaAaFHEWTgJEUlj5ohKAlUe8Bc2TACBasV5nYKrdChOcpyzongYA3pT2ALBFFQAC0EkBEI9ovcBmi8rMCouige1_PrCLe5u-_Gr95xHskpOoC72s2rsnUhcISwCx7ZNwIzHMds3AF5WZiJyW_I6k9eWLKvmRndc3F5xEfRYDbFd-vqiMAx6-XH7rJKJYXNn15GeLykKAc_2bDj4NAEiSR_miCoBl5gYwyWn0EuLGpQuAL6oLATmlCBaXkj35LXUldhA-JfnFDWqvlwNqB3ItsmQEXwebwTKMZXcHuJ1Aw_MH7-kQh1EmIgCQuhVaj9MhBw_SEYIm0TXfXKaoiGtijoaQTENoSENi_uZDFASDiMppsUf3wohcWe_lmkOIHKiFCAKgR1eOmQsjl92-8EW1pLaVpxvRuK3H6TBwhr0YAU06Ux5lL6sh8ZzYS2cQDmhI2JBryDQHEYl7Vg26ssXp0b20b8gmKr5YvCdw4rsd_U8YMR5RHN2Kn2J4WRhtBrRDLEcrW5Z0uFsAun5WRqImXc9vX9p_ZPebcCjCSHHpN-YXZeOysF_YspxhD-YMaGlmQeLo0RX3VwtnS3Fc35ZDlQ9hvRhHhOjR2c4_kgtkUwHpTAUdLy5sRBq_FpZ6McB6dOV9TZfuhb1d9pbEFwdsBJ36dnWtQYeHK59lw0l0EOFFo0LmG3jQN1xTLypcpBcV5QixeFTIXkPQUG-AUH5dZFnD3ROy0CS6seip7puXjR7xP1j0NYSHpqkiY44hqi6gl0UkfnnXvyC0hrxdz4nF06sOXXFjurCzY9nYhwfHPlIMP2IIGjJlkQ606Sw4kgiJHh12tegQAZPoTrWIY1m6wnAwGC15SVHQIThMB4u7Kl06DJYtZRDLGryhdCUetrktR8aPkm7Mx8v74B7dSydq2UUAGmrqUXGdNXYRUNKNRY-Lp5CJX0Qs6RmyJgcONTnY0ct-2NXLfuVF-9Ke4SLZ5Rgauhwj-VUNxiOVrKCzrOFGuXrttxa1ufgNfK_U24ODLtRrbMtXw8VHdyIb3Ye8GNl6oztSjeQqOnu4ApiuOY3uNC9YsawBxoMNsGPqdRHlu8_f96HW8k35t5a0Vouf5V6-avzst_GXFV2--j9LkrJU' },\n    bytefield: { name: 'Bytefield', example: 'eNqllcuOmzAUhvd5iiPPJiyQgDDMDNt20327QixMMBfF2BRMQzri3WsM4T7MpYkUC_P59_F_znGOIYmwEEUJbhDrcUEIg1c3SikF9ICNKMIGarTDcYbdCKX8OnJRtM3lKbtMqcDYos43PN8TR3hDqypySkaO2MFj9NRyCmQQFvgqD8CrXKc4IFRPCA5JcQDwylzuoCZ9-XhUZMBrOApSi-4FeG6GRdLqcyb0Mv1LwLQaX5Mzarn6cQNeSM0SHl4bcBOSxokA0260eRQFybggYTAJ4ZKyEHARl2MEZ06rjPVMqQ3z6zPAI6BS4EKg96if9Y_v-9AJkLjlZB-yALWx7kOmVMJ3iEkn9UIWhfksvZiabNSmORaXtnj3_GSd7BdMwOt9tpsR9rVtpa7-tI1cdgaAyqW21OyWrUWNoVgXkgmpdSWrsme36afhKGs1w8KVqBENtf2WaOuwdLoX3aZldPak_BfW9mc2us8ZtSVZg-e5OcUpu9fytStTRNtBMpMCdxofEBxNS0P-yq5uS_-t8J0xdk-OtR6lRSnWK3lJfoP3B8sWc-SiEzj99-S3vbAt3uIL-YJQLJtqtsFqBwOMlap68Y7E4HdPUrw4imrwjd6WGbKfDAteBuBeqdrs2TINGwZ_tT32Y1ife0pYLBLUX1--HMsqAHO8t1Yq9izSz8vEOAf0rSKAZU9QznPIecoEBDdB2stgIs5SCspOeWu0_bpn0Mn51LlZlS2jRQkXaOfgH5U5V2Qh89U0WPtp-B8VlYVf7ML4lfXWSyhLWX9Hd38uJTiTfYXgmXb4BwBAgK8=' },\n    seqdiag: { name: 'SeqDiag', example: 'eNorTi1MyUxMV6jmUlBIKsovL04tUlDQtVMoT00CMsuAvOicxKTUHAVbBSV31xAF_WKIBv3isnT9pMTiVDMTpVhroGaEBpD2gqL85NTi4nxk7c75eUDpEoWS1Aogka-QmZuYnoqu2UZXF6HZGslRIAm4MmuuWgA13z1R' },\n    actdiag: { name: 'ActDiag', example: 'eNpVTjkOwkAM7POK0fa8AEFDQUGNKBCFCdbKItmVjCFIKH9nj4Sj81yeodYuQh6vBhhUjLFYo43hwWr5lJ48N0nsKDDuN9ZizfjMHVZw-8S5QtX88aMcEpbgYfw0d1oWT_n349myIQ9Q6qtWjePcuNN4lalynvVNbyYmN8Di_4fxDQA-Q4A=' },\n    nwdiag: { name: 'NwDiag', example: 'eNrLK0_JTExXqOZSUMhLLSnPL8pWSMmtAvMVFBJTUopSi4sVbBWUjAwN9CpAUN_IRIkLLFuemmRgqBCNRZGhUqw1XIkRViVGECW1SPZm5pWkFuUl5mBabmhuhLDcGpftMFV4bIcpMYIpSQEaAmcZQVxUCwBCbklM' },\n    packetdiag: { name: 'PacketDiag', example: 'eNptkU9Pg0AQxe9-ijnqYRN2QSgYD6bGPzFpCW1jTGPMyk5hQ9mtsMjB-N0dIGk8cH2_mXkzb04yr9ApLQv4uQDI7bHXypVwC764IcFYhR8l6qJ0pEWkkegxfp3AxnZNjpDaxg2VPGQ-T-AeW6eNdNqaM_IFC31qwK8ODbWsuvoTm4GEAYtp1F1eGdsfURU1GvePxyGLYxoqnYT14dDiZOXRBh71Zdhi841qEsMEdtkj7BvrpENaV0Te-4Qi8li-zKJFAunmaRaRc7bZziHu0Tlvq1lEITw8zyPBuKBVXrVRth8lsWA8oGyWJeZV29WjGAQUMJnvmmKII7XauCkPHtLlMTlcrk9DxC1IoyCVSmlTXI0VsWBC0EQ1ZLanh56_59MWv39OCoi9' },\n    rackdiag: { name: 'RackDiag', example: 'eNorSkzOTslMTFeo5lJQMDQLtQZRVgqhAcEK0UahsSCusZWCi5NCcGpRWWoRiG9ipRCemoQkYIouYIYuYG6l4JOfmKLglJiTmJcMEbMAihkrBJdnliRnWHPVAgDhXSWB' },\n    c4plantuml: { name: 'C4 with PlantUML', example: 'eNp9UkFuwjAQvOcVW05Uopz6AErEgQMVKvQcGbNJLBwbeTeC_r4b40AQtLd4PDszO86MWAVuG5u9GKdtu0fI34vcO8YzT4_dRcaGLcLmhxgbSFewN6oKqoHSB1gKFBwyzJU7GFclbpatMZB3Y90S-wbDBEY9I0_QSLAP6AngS-AaYSesCZwM13CMEspGDJTWvnVM09FrdjEZ7y6KBcWjyP2RJjpZ6090tSNgD7pGfehcTbiTT_rF4szjRhl7M1i8dWegq-xWIpvoKjlXRgdPvmRYnHWtXIWAw4Fb9F7alVIkis6q_34SfcM-IIGyti9JCwBpe7GXh2gUG-9i-C-0g9ofOvomJKEJq5grfRhQ71fdoNtTyt-1lWY-0VT1zoeH8v-ZjkustuuLxLPJaw8p3UzG5Qf8BSot7V4=' },\n    ditaa: { name: 'Ditaa', example: 'eNpTUAABbV0o0OYC8xVqFKCgBiEQWpxahCKAqgLDDBCIA7KLUgtLU4tL4ApBoIwLSQNcV40CMqiBiXgX5Wdnoogg1EB1opmF5CyFODCCqVfIzEvLSSxJ5YILIJkI11OGbKI2KW51ySxJTMTtVhyORQkbBYSDaxQKivKTU4uLUaVr0N2LGgPaXACSblPX' },\n    erd: { name: 'Erd', example: 'eNqLDkgtKs7Pi-XSykvMTeXKSM1MzyjhKodQ2kmZRSUZ8Tn5yYklmfl58ZkpXFzRPlAeUAuQn5xZUslVXJJYksqVnF-aV1JUycUFMVJBS1fXUAGmGgCFAiQX' },\n    excalidraw: { name: 'Excalidraw', example: 'eNrVm1tT4koXhu_nV1h8twO7z4e58zioM3hARd01ZQUSIBoSTAKIU_Pfv05kk4OJBiVjjFVi0t3pTudhvWutbn9_2dio-fOxUfu2UTMeeppl6q42q30Nrk8N1zMdWxWh8NxzJm4vrDn0_bH37Z9_ohaNnjN6amVYxsiwfU_V-1edb2z8Dn_H-nGNnq_ZA8sIG4RFUVeQ0_TVlmOH3SIuMSEAiGUF09tR3fmGrkr7muUZUUlwqYaur4aIGDoSewdgvltv46vWVdRr37Sstj-3np5J6w0nbmxMnu86d0bH1P1hMK7U9WU7z1EzELVynclgaBuel2jjjLWe6c-DawAsrz5NwreN6MqDOqMiOg9bEJDqe9uxHDfo-38gPKLeu1rvbqCGYOtRHUg1rduP6swWTxTrZmiYg6Ef9CUbMnGwqGsjnGaKoISMUrQsCPob7-vhC_-VnqWh5o4Xs1HzgpPYWINh7j7Rsmi-KFKFWwaco_nj8AJf68SebbvOzY2oLcp_hZ9_vr4Fr9hTp_CCjHBBMGeF8eoegaMLn434D2d2Nb5HyDje3qw6XoytFy_SY0afPscLojfxBTHACDAJSLmAHWrbR7J-cntu2O359mSi2c6ZsxbAcL79ggLy2IO9xtftI2hO7mXdY-PWw84MnN43e6dV54uv2Xz1tS4AWXy9zX4JBiVDcThLwYsTsz-6H03AtAVah-AG7M2OR-vAS6JcvCDCShzpCoCd26PW2Wh24I_YyJl0e9_99mCr6oBJtm7AKKJoXfqIOBeQ0LL5glMGWrs7qOea37_XZ46sOyc_1sAXArl8QYGwejSAivPl9Dk7IJ2jg6bdNMEPBi88_6bqfEFA1gtY1yBdvbs2CwaJZFwyEfODS0Hs9nZy_Dg_tY2fU9xn1Bp7N0xbiwnLVUhlwQgDiJPiiLWtaffWuKhL67Lbc61Ds1sf3lYeMYTWi5hgwpDsOWLsbYRJLASj6qdcwujJyeNwdjO5v7txt7QOmv10zbNihPnGg58Fl4C5bEEhJIAQycJsTV3dxwf97g66nD2SQ3LWaff2q86WSFmvOisHLSgz2CI0w1pJBDkSpVirqHnfsf22-RjMB2aJq3vayLTmifkM6VEdHGhTra0kdOzH58AzLNMOb4QSLTYtcxAwVrOMfhI-3-xp1rLYd8a1F-HVXNeZZdGLSb5pxComYhTI4uFpdgxd9eyH5A0KOMUYK39DSUECZiRlKTCTLDuJZRpmxhiiiXdQmOVwIAVZ9nzN9bdMWzftgSr5HVnMvtObBJXroEGgDCZJOQKCcEzk8psXjEobx19AlJXbf3L7Hwb-9HxL2z-2dzoH1_Lu_KS5TK78WQ7DsPXXBgFTBy4-iOzc3LNBjB0znkwMjuivjQie8GT596-vmbXrMAUXFvH2dSpfuwNCDSIRUSBAzjiiDCVuoJiJ7vAldaeapXn-tjMamb760h4HD6aey55YVvLNbwbmYWhoerpUvZB42cKOrFknlZlRVMkV0mDZOH2yLCsG5cikJEVUUhCGlLslPjKp-j4p3TP83vCvquiLQQbLTfMKyRGkJPb6X-O7_uMeaIPbzgmGZ6c3m1N6TZqdyvON1uoG-q5me2PNVVhlZEqyUr00HtI8Ua5ECjJKMKps4JrrmVHM89cNEJNEqsiiMFHZyeeqJ3YRbAAqBA1iRghiK0Dz8AvXgJxLQKhgyk-ltJygIzECSFGGdeWyIVR8LSlRaozJc2PLMFexrXgLhu_w4tJK_qJrBYr7UdmLUGX7UbnvIThw-g288348_35V9rHiFiFlM7ByPwSGsXDvNZNBhrtHutWbHbLN5vxieNur_7xsf7a1RlRSKgLgIk4WpghCJgWpYCbiWHM9oxpJCIpJHrZSYKqMvCyudNnrYJVPocEGo5wok4OI-oRJiGFJOQjcgBQi5Z9iNUQMZIZPJZXIEikkQ1ICicHzdJtQwS0hWKKPTlGAhpo9qAy2QJyr5xFshQzFIfGcuub2XXBwCVoHD2Kq87M3ZSgQZBhwrnqXWM0aKz6G7NX30oU1AR6iiQQFfK29ApdINdVCAEYUSowk8xsizc9nUVLxQlqfcuU8sOJLRtlwVV1KU2l9VJKWYsaKaClXDjRVnH7oNor3Sa5ie2xaxoZm6xtHY98cBTeohAJzmb-KxRHhDApSfBNk9laBT7bJA5eEe-YSPHuWuYCcKXus4hJRgcy_UjSuRI0xBJRQgBUkTZ-alxO903owm1cnP6_7982O11xdVpW0cyYRjn7DFRYfMvcclSurIlG9Tl5tQJINFBGfRChlru9OuPLdCVvBcGTTUvks1d8xHEQUSuxDKQSSwbx_5H6w9wnlqVF3FvoYiuWO4VRLLkG-dygog5SssGienTyu-n4imPIORTnQZ-X5M8WSqwgEV0IsMUAw2NYPpXJXcXy59j-hIg0BAIGUY8lV8E1QnnLdD-9up_vwYtS51u3D6Tk9Obw-fIt6qr6EVPaYCYKCRLoorp7ZOypLDkpRoj56tUGi-meRTgTzN-7DIDtN0ApmJJuVyu98Fel8bQNKSdWjM_U1AoiVk77FsoiUIhhYclL6f4a8vHz4PindfTB6E78yupm7pkkJFojHg7DXgM_ey_nZ9uEi8veEUzwTTgSopIxIzD4-eavUEGJAMOFCffnF8yAzVya3WX_-eDZAe83NkXt61d--OWuO3iKTOHUUV8nsTeHlqiRaNcZMNRCfRSdRrtVAACDMCcTFdTIblsq72-zvJGOj7P-LMSajSpspJOQjt-u_Txi_b5ejiV8WI6tp43Hb13xjaWxqU9OYbWX9P1h4LO6uZtLUF08TOr5_vvz5PwWZbjk=' },\n    graphviz: { name: 'GraphViz', example: 'eNp9kM0KgzAQhO8-xZIHaKlX6Ulp6S-FPoDEuGhqbML6cyl594JVGyv1OMPMt8ukMiNucojg5QFUTfKRQjVVjRSbzgZQPEEFW2An0oVkQWfO0mLTx53CHalF6hsAO6kwQV4PesbIRPylOJxIiwJp_YMDOPKWD8ouQP0F6AWp5DJ1qOyqU1w9Kte6NcZgjZPrLMxJl8imH9g_8_jzecLzYSzvteLPLBgR1rNvJ7Rwmw==' },\n    mermaid: { name: 'Mermaid', example: 'eNpNzr0OgjAcBPCdp7hRB-QNNHz4Masb6VBK0zZg_6S2GhTf3cJgnH93l1OODxrXKgHyGrkdyUowpOl2KrmFlv2ACcUKR4InKON1aDaCbtkYXsFLobPOUWewjgvF3EP5xomec1qQ9c40MbbDJ3q5eFXjLAdy3liFJqg72M_2NS6au1lMK_k_HeK99kGCLz2WfAHnUzg5' },\n    nomnoml: { name: 'Nomnoml', example: 'eNpdjzELgzAQhff8ioxaSOlWsJKlU4dC95Dh1Kgp0cjlQhH88VWs1BZueLz73j1OPSwCmcmM5upjTxm_9TQh2CpJL4N1DhqTpBPjXBUGsNJCqAEQPemdl0lV--h45yO1mmnGVA5FIISS5B0QYmVQ59kcXvs024Tgp-PxrDobytaael48vXNjb0LQQn7xHxdj928F2zfz7A5LfljAiSCQXbD1t_CyTZLuuV12U_mn5A2ROWWs' },\n    pikchr: { name: 'Pikchr', example: 'eNq1VLFu2zAQ3fkVB8UB2rRWZTlqIgMdHCBDAKMo0iDw4IW2aIkNTQokbbl_3yMpOXLtABnaQSB4d3z33jtSAw3fIIlTLongkmla-P1NdjXQPtLwEEkzQi7gp6XaApUFMPyWQq1eDLkgS7WHiAm2YdJGsFSigDW3_jwUqpGQJZew1moDghqLBfvYNKRQFlzD1GVXSiiNiHT1QubJxBfGDD7BhyQef04-Eqq1anog7rRVME_IRu0YaF5WFsZxjkocHcc7uwSMpbisuRAdeN6CNzA8Bz7PHeyBZ0Oc7qeKwYZyCXorGNiKWigVM2Cspr6xrbTallWAMN4lRFlzyU3VGaSWv9jKDgvmwpYrGQG3VPCVMwsQcjT6MvoKDf0NS2YbxiSq82bP85ahE5wfsU3-ZhvIzqZ397OJp4vtw4Fg0UC_nqywhZ_PCOeLEw-Rro6oHRUQBSxc3UgDEg6sTS6iySLqp9IEc15urcyJylAULkZos5WWC2A77NtwWzn7cSwDjVOBBYHAaFufq_OpE0e8F45czA5KrpI4OyD57W0_dxsIdbnrrJ-8znqudPY-Tx8fpneze3wa77U4jd92-ADXd_KmM5Iaw0vp3tZQ1fhErdKnnr6Ws319nP_nbrcm_Hh8-P70bv3j8FM5a8AiqjWX9ugmtZfIxYdUl-a_SvoDVDiU0w==' },\n    plantuml: { name: 'PlantUML', example: 'eNplj0FvwjAMhe_5FVZP40CgaNMuUGkcdttp3Kc0NSVq4lRxGNKm_fe1HULuuD37-bOfuXPUm2QChEjRnlIMCDmdUfHNSYY6xh42a9Fsegflk-yYlOLlcHK2I2SGtX4WZm9sZ1o8uOzxxbuWAlIGj8cshs6M1jDuY2owyU2P8jAezdnn10j53X0hlBsZFW021Pq7HaVSNw-KN-OogG8F8BAGqT8dXhZjxW4cyJEW6kcC-yHWFagHqW0MfaThhYmaVyE26P_x27qaDmXeruqqAMMw1h-ZlRI4aF3dX7hOwm5XzfIKDctlNcshPT1tFa8JPYAj-Zf5F065sqM=' },\n    svgbob: { name: 'Svgbob', example: 'eNqFT0kOgEAIu_sKbs4kwtxNxo-o4SN9vBWjxiXaA0taCojcYdolkdypNezcnWFn0inLwY_kZ1SI6pDuTnlLfoADpe-LwBFMezE0bWmjw-hm5muQuXmcxyFLIX7hdkzn5kgfUvpxZ9wDQa340gaw2lLL6lfLd7eHHQswfT6D' },\n    vega: { name: 'Vega', example: 'eNqVVcmSmzAQvfsrKCVHgrE9VGZc5UP23PIBKR8ENKAZgSgQjikX_x5JLELYcpzLMDTv9fq6fVk5DnpfRxnkGO0dlHFe1vv1-gQp9lLCsyb0CFv3AGVdnwLvtWYFciX1D4l5JohPvq_eMyBpxoVhOxhKHMekSIUlcFfSEGMuI_0W_zvORf0V1gLnIONzHFJQrpX5hGkD9QRXFBRhDimrWon_hFwH4Zw1hQr63LkW4GcDGARW4BcD-LSzAr8awJeNFfjNAD7bgd_NHO2hfxjAzYsV-NMM_bEbcEf1lG_Hfio1SQtM6zuDYYxyUi5GI75cpuBIiMKcFJyg4NIpqiDie5FHDewElcyqKYUSlGvxbHJk1HCT2HDBmxMvHbIXFGEKd-o5K4Auh7elsoe4iLU1ZjkmsqrLqNtRoQ5KCNBYWqaG605UuEiVu34_JrveBt_zAw0XA5KueNVAX4h7O-t2kfVD-Q3z19kVJIIh2nXGwwYv-4nP826KWVcElKhQyDhnuYzYJ6ebO5Uxh1NIuAFuR7AOluPq7cbsxhlJTegeJJWIrjswNEBXC0XEYqXUSWDCxoUK5yZhPCsvyyLuT1oRxyN4k6wEJZbUpLQmvL2OtZxaT9vaeOM6-t2En1H10hgVJ4RS5XBko5oD0FC-3PaTqfX9p5sK4rmD1fy51PY4VQ7n2VQfnhqm4nSZ0aMeaLYuxDVQUoAJHcRrQq_rebfb7dD_dNaqpf7Qzi6qN4lKi8X3ggflcu1u0I34xpKkBrlzH7amN9Vp5dDGvu7HrxJHhLfGge9vNYeaT2fcORwOzvRbMZelu6CNXzbd7MPRphl5G1bd6i80GTZv' },\n    vegalite: { name: 'Vega-Lite', example: 'eNrtVktz2yAQvvtXMEyOqt9pnNz6To-d6c3jA5ZWEg0CF7Ba26P_3gVb2JJSN8mhTWdyMIb92CffCnY9QuiFiXMoGL0hNLd2ZW4GgxIy1s-4zdfLPleD_QYvfSW4hUE57X8zStLI6SdgYs1XlqMAbdwqzbdKWibEhsRKxsyCxF9C4pxpa4jNmSUmVz9IwtMUNEhL7GYFhqgURWgMLN9ymRETMwGmf3DDrItxh3NclUysweB67teE7KjP4A2NCF3ibDyroib0toYuL9vQuxqaTtrQ-xq6HrWhDzU060Afg6-OwU81NLpuQ7fB4FUb-hwMjiuPLHD0m2i-L3Koxe6gSQum75xuzHUsgNYWKchYJVjfUE0v3TSWKEg5iMTpL4Oql7uzcmKpCi6ZaIJGaReJXAvRkLOf3LQcOFM8vnPilAkDURNLVMG4_A1ouRVw8HOCVGFeHRWo4Vt4bHLf10yiE2Z5Ca0MHSnvSaWhiA7_GFashNJ_P65WJbegFeJWr-E04oZpARnI5L7j258C_XI-6d7p_8H0C0v_PUtFhw2aycxtmM-GERm9xmE8xWEyxmE6HC6eJam7afgLy-8oWIZX26OZnSpd-E8qTWh0lvTihfT_C-ltrgHfHaJzpCGf-QR5fjVcnOuK8XDfEM-tF56c3bFZSq45PsDo0y-CryGIhzQFjj4YikpKlMfkOrmGWlIuE1hhEPhqPLbNgUYNMLioelXvF-H7eDo=' },\n    wavedrom: { name: 'WaveDrom', example: 'eNqrVijOTM9LzLFSiOZSUKhWyEvMTbVSUErOyVbSUYCB8sQykGCBHgjUALGSQq0OsnKXxJJEhHqo8go9YxPTihpbvQqgVApQBdAOpYzUxBQgVykpP6USRJckZuaAaJC8UiyasUGphaWpxSVQk6HGGugZ6ukZ1BjqGcBcgarJMTk7L788JzUlPRWoEarJEOJ0A0OQ07liawGPW0Gr' },\n};\n\nexport default krokiInfo;","import { COPY_BUTTON_HOVERED, DIAGRAM_CHANGED, DIAGRAM_CHANGED_UPDATE, DIAGRAM_TYPE_CHANGED, RENDERURL_CHANGED, TEXT_COPIED } from \"../constants/editor\";\nimport { createReducer } from \"./utils/createReducer\";\nimport { encode, decode } from \"../kroki/coder\";\nimport diagramTypes from \"../kroki/krokiInfo\";\n\nconst defaultDiagramType = 'plantuml';\n\nconst initialState = {\n    baseUrl: window.location.origin + window.location.pathname,\n    hash: null,\n    diagramType: defaultDiagramType,\n    diagramText: decode(diagramTypes[defaultDiagramType].example),\n    filetype: 'svg',\n    diagramTypes,\n    renderUrl: (window.config && window.config.krokiEngineUrl) || 'https://kroki.io/',\n    scopes: {\n        'image': {\n            isHover: false,\n            isCopied: false,\n        },\n        'edit': {\n            isHover: false,\n            isCopied: false,\n        },\n        'markdown': {\n            isHover: false,\n            isCopied: false,\n        },\n    }\n};\n\n/**\n * \n * @param {State} state \n * @returns \n */\nconst updateDiagram = (state) => {\n    let { diagramType, filetype, renderUrl, diagramText, baseUrl } = state;\n    if (!renderUrl || renderUrl === '') {\n        renderUrl = initialState.renderUrl;\n    }\n    if (!filetype || filetype === '') {\n        filetype = initialState.filetype;\n    }\n    if (!diagramType || diagramType === '') {\n        diagramType = state.diagramType;\n    }\n    if (!diagramType || diagramType === '') {\n        diagramType = initialState.diagramType;\n    }\n    const codedDiagramTextText = encode(diagramText);\n    const diagramUrl = [renderUrl.replace(/\\/*$/, ''), diagramType, filetype, codedDiagramTextText].join('/')\n    if (state.diagramUrl !== diagramUrl) {\n        state = { ...state, diagramUrl, diagramEditUrl: `${baseUrl}#${diagramUrl}` }\n    }\n    return state;\n}\n\n/**\n * \n * @param {State} state \n * @param {string} hash \n * @returns \n * @template State\n */\nconst updateHash = (state, hash) => {\n    let url = hash;\n    if (url.startsWith('#')) {\n        url = url.substr(1);\n    }\n    let protocol = null;\n    let renderSite = null;\n    let coded = null;\n    let filetype = null;\n    let diagramType = null;\n    let renderUrl = null;\n    let diagramText = null;\n    const protocolSeparator = '://';\n    const protocolSeparatorPosition = url.indexOf(protocolSeparator);\n    if (protocolSeparatorPosition >= 0) {\n        protocol = url.substr(0, protocolSeparatorPosition);\n        url = url.substr(protocolSeparatorPosition + protocolSeparator.length)\n    }\n    const urlParts = url.split('/');\n    if (urlParts.length >= 3) {\n        coded = urlParts[urlParts.length - 1];\n        filetype = urlParts[urlParts.length - 2];\n        diagramType = urlParts[urlParts.length - 3];\n        if (urlParts.length > 3) {\n            renderSite = urlParts.slice(0, urlParts.length - 3).join('/')\n        }\n    }\n    if (renderSite && protocol) {\n        renderUrl = protocol + protocolSeparator + renderSite;\n    }\n    if (coded) {\n        diagramText = decode(coded);\n    } else {\n        diagramText = state.diagramText;\n    }\n    state = { ...state, hash, filetype, diagramType, renderUrl, diagramText };\n    state = updateDiagram(state);\n    return state;\n}\n\nconst updateDiagramTypeAndTextIfDefault = (state, diagramType) => {\n    if (state.diagramText === '' || state.diagramText === decode(state.diagramTypes[state.diagramType].example)) {\n        state = { ...state, diagramType, diagramText: decode(state.diagramTypes[diagramType].example) };\n    } else {\n        state = { ...state, diagramType };\n    }\n    state = updateDiagram(state);\n    return state;\n}\n\nexport default createReducer({\n    \"@@router/LOCATION_CHANGE\": (state, action) => {\n        const { location, isFirstRendering } = action.payload;\n        let hash = location.hash;\n        if (hash === undefined) {\n            hash = location.location.hash;\n        }\n        if (state.hash !== hash || isFirstRendering) {\n            state = updateHash(state, hash);\n        }\n        return state;\n    },\n    [COPY_BUTTON_HOVERED]: (state, action) => {\n        const { scope, isHover } = action;\n        return { ...state, scopes: { ...state.scopes, [scope]: { ...state.scopes[scope], isHover } } }\n    },\n    [TEXT_COPIED]: (state, action) => {\n        const { scope, isCopied } = action;\n        return { ...state, scopes: { ...state.scopes, [scope]: { ...state.scopes[scope], isCopied } } }\n    },\n    [RENDERURL_CHANGED]: (state, action) => {\n        const { renderUrl } = action;\n        state = { ...state, renderUrl };\n        state = updateDiagram(state);\n        return state;\n    },\n    [DIAGRAM_CHANGED]: (state, action) => {\n        const { diagramText } = action;\n        state = { ...state, diagramText };\n        // state = updateDiagram(state);\n        return state;\n    },\n    [DIAGRAM_CHANGED_UPDATE]: (state) => {\n        state = updateDiagram(state);\n        return state;\n    },\n    [DIAGRAM_TYPE_CHANGED]: (state, action) => {\n        const { diagramType } = action;\n        if (diagramType !== state.diagramType) {\n            state = updateDiagramTypeAndTextIfDefault(state, diagramType);\n        }\n        return state;\n    },\n}, initialState);\n","/**\n * @typedef {import('../../init/redux').Reducer<State>} Reducer\n * @template State\n */\n\n/**\n * @typedef {import('../../init/redux').AnyAction} AnyAction\n * @template State\n */\n\n/**\n * @typedef {{[type:string] : Reducer<State>}} ReducerByType\n * @template State\n */\n\n/**\n * Create a Reducer using a ReducerByType\n * \n * @param {ReducerByType<State>} reducersByType\n * @param {State} initialState\n * @returns Reducer<State>\n * @template State\n */\nexport const createReducer = (reducersByType, initialState = {}) => {\n    /**\n     * A Reducer based on a ReducerByType\n     * \n     * @param {State} state \n     * @param {AnyAction<State>} action \n     * @returns State\n     */\n    const reducer = (state, action) => {\n        if (!state) {\n            state = initialState;\n        }\n\n        if (action) {\n            const { type } = action;\n            if (type) {\n                const specificReducer = reducersByType[type];\n                if (specificReducer) {\n                    state = specificReducer(state, action);\n                }\n            }\n        }\n\n        return state;\n    };\n    return reducer;\n}\n","let debug = false;\nif (localStorage.debug) {\n    debug = true;\n}\nconst debugReducer = (state, action) => {\n    if (debug) {\n        console.log('action', action);\n    }\n    return true;\n}\nexport default debugReducer;\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux';\nimport editor from './editor';\nimport debug from './debug';\n\n/**\n * @param {import(\"../init/redux\").BrowserHistory} history\n * @return {import(\"../init/redux\").Reducer<State>}\n * @template State\n */\nconst createReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    editor,\n    debug,\n});\nexport default createReducer;","/** \n * @type {import('../init/reactRedux').Provider<State>} \n * @template State\n */\nconst provider = {\n    onNewState: (state) => {\n        window.state = state;\n    }\n};\n\nexport default provider;\n","/**\n * @typedef {import('../init/reactRedux').StateChange<State, T>} StateChange\n * @template State\n * @template T\n */\n\n/** \n * @type {StateChange<State,string>} \n * @template State \n */\nconst onNewDiagram = {\n    name: 'onNewDiagram',\n    getStateValue: (state) => {\n        if (state.editor) {\n            return state.editor.diagramUrl;\n        }\n        return null;\n    },\n    onNewValue: (currentValue, previousValue, currentState, subscribeParams) => {\n        const {history} = subscribeParams;\n        if (currentValue) {\n            history.push(`#${currentValue}`);\n        }\n    },\n}\n\n/** \n * @type {import('../init/reactRedux').Provider<State>} \n * @template State\n */\nconst provider = {\n    stateChangeManager: [onNewDiagram],\n    onNewState: (state) => {\n        window.state = state;\n    }\n};\n\nexport default provider;\n","let debug = false;\nif (localStorage.debug) {\n    debug = true;\n}\n\n/** \n * @type {import('../init/reactRedux').Provider<State>} \n * @template State\n */\nconst provider = {\n    onNewState: (state) => {\n        if (debug) {\n            console.log('state', state);\n        }\n    }\n};\n\nexport default provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router'\n\n/**\n * @typedef {import('history').BrowserHistory} BrowserHistory\n */\n\n/**\n * Init react layer of the application\n * \n * @param {import('./redux').Store<State>} store\n * @param {BrowserHistory} history\n * @param {()=>JSX.Element} ReactNode \n * @param {HTMLElement} domNode \n * @template State\n */\nexport const initReact = (store, history, domNode, ReactNode) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ReactNode />\n        </ConnectedRouter>\n      </Provider>,\n    </React.StrictMode>,\n    domNode\n  );\n}\n\n","import Router from './views/Router';\nimport reportWebVitals from './reportWebVitals';\nimport { initReactRedux } from './init/reactRedux';\nimport reducers from './reducers';\nimport exportToWindow from './providers/exportToWindow';\nimport diagramChange from './providers/diagramChange';\nimport debug from './providers/debug';\n\nconst providers = [\n    exportToWindow,\n    diagramChange,\n    debug,\n];\ninitReactRedux(providers, '/', document.getElementById('root'), Router, reducers)\n\nreportWebVitals();\n"],"sourceRoot":""}